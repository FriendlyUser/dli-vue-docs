(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{185:function(e,o,t){"use strict";t.r(o);var n=t(0),l=function(e){var o,t,n=((o={}).internal=t=void 0,o.contentType="markdown",o.slug="EngineeringSoftwareDesign/ClientServer",o.content=t,o.title="ClientServer.png",o.date="2019-08-31",o.layout="test",o.markdownHeadings=[],o.excerpt='<p><img src="ClientServer.png" alt="EngineeringSoftwareDesign" title="ClientServer"></p>\n',o.createdAt=new Date(15672096e5),o.updatedAt=new Date(1567374240244),o.type="page",o.permalink="/EngineeringSoftwareDesign/ClientServer.html",o.assets={},o.attributes=o,o.prevPost={title:"stepResponsePlot.png",permalink:"/ControlSystems/CSII/stepResponsePlot.html"},o.nextPost={title:"samplerTesting.png",permalink:"/ControlSystems/CSII/samplerTesting.html"},o),l=e.options.beforeCreate||[];e.options.beforeCreate=[function(){this.$page=n}].concat(l);["layout","transition"].forEach(function(o){var t=e.options.PageComponent;t&&(e.options[o]=t[o]),void 0===e.options[o]&&(e.options[o]=n[o])}),e.options.name="page-wrapper-"+n.slug.replace(/[^0-9a-z\-]/i,"-")},m=Object(n.a)({},function(){var e=this.$createElement,o=this._self._c||e;return o("layout-manager",[o("p",[o("img",{attrs:{src:"ClientServer.png",alt:"EngineeringSoftwareDesign",title:"ClientServer"}})]),this._v(" "),o("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"tex"}},[o("pre",{pre:!0,attrs:{class:"saber-highlight-code language-tex"}},[o("code",{pre:!0,attrs:{class:"language-tex"}},[this._v("\\documentclass[tikz,border=10pt]{standalone}\n\\usetikzlibrary{positioning,fit,shapes.arrows,shadows}\n\\newcounter{module}\n\\setcounter{module}{0}\n\\renewcommand*\\themodule{\\Alph{module}}\n\\tikzset{%\n  module/.style={rounded corners, align=center, font=\\sffamily, thick},\n  simple module/.style={module, top color=blue!10, bottom color=blue!35, draw=blue!75, text width=40mm, minimum height=15mm, drop shadow},\n  square module/.style={module, draw=orange!75!black, minimum height=20mm, text width=20mm},\n  long module/.style={module, draw=orange!75!black, minimum height=20mm, text width=50mm},\n  combo module/.style={module, draw=blue!75!black},\n  simple module/.pic={\n    \\stepcounter{module}\n    \\node (module \\themodule) [simple module] {};\n  },\n  module down arrow/.style={module arrow, shape border rotate=-90, yshift=1.25mm},\n  module up arrow/.style={module arrow, shape border rotate=90, yshift=-1.25mm},\n  module right arrow/.style={module arrow, xshift=-1.25mm},\n  module left arrow/.style={module arrow, rotate = -180, xshift=1.25mm},\n  module rightup arrow/.style={module arrow,rotate =45, yshift=1.25mm,xshift=1.25mm},\n  module rightdown arrow/.style={module arrow,rotate =-45, yshift=-1.25mm,xshift=1.25mm},\n  module leftup arrow/.style={module arrow,rotate =135, yshift=1.25mm,xshift=-1.25mm},\n  module leftdown arrow/.style={module arrow,rotate =215, yshift=-1.25mm,xshift=-1.25mm},\n  pics/horizontal module/.style n args=3{\n    code={\n      \\stepcounter{module}\n      \\coordinate (c) at (0,0);\n      \\node [module right arrow] at (c) {};\n      \\node (module \\themodule-1) [square module, left=7.5mm of c] {#1};\n      \\node (module \\themodule-2) [square module, right=7.5mm of c] {#2};\n      \\node (module \\themodule-3) [below=1.5mm of c |- module \\themodule-2.south, module] {#3};\n      \\node (module \\themodule) [fit=(module \\themodule-1) (module \\themodule-2) (module \\themodule-3), combo module] {};\n    }\n  },\n  pics/vertical module/.style n args=3{\n    code={\n      \\stepcounter{module}\n      \\coordinate (c) at (0,0);\n      \\node [module down arrow] at (c) {};\n      \\node (module \\themodule-1) [long module, above=7.5mm of c] {#1};\n      \\node (module \\themodule-2) [long module, below=7.5mm of c] {#2};\n      \\node (module \\themodule-3) [above=1.5mm of module \\themodule-1.north, module] {#3};\n      \\node (module \\themodule) [fit=(module \\themodule-1) (module \\themodule-2) (module \\themodule-3), combo module] {};\n    }\n  },\n  module arrow/.style={single arrow, single arrow head extend=2.5mm, drop shadow, draw=gray!75, inner color=gray!20, outer color=gray!35, thick, shape border uses incircle, text height=1.5mm, text width=2.5mm, anchor=center},\n  module doubleArrow/.style={double arrow, double arrow head extend=2.5mm, drop shadow, draw=gray!75, inner color=gray!20, outer color=gray!35, thick, shape border uses incircle, text height=1mm, text width=5mm, anchor=center},\n}\n\\begin{document}\n\\begin{tikzpicture}\n\t%% Module A --- client side modules\n  \\pic {simple module};\n  \\node[] (node name) at (module A) {\\large {\\textbf{Client-Side}}};\n  \\node [module down arrow] at ([yshift=-7.5mm]module A.south) {};\n  \\node [module up arrow] at ([yshift=7.5mm]module A.north) {};\n  \\node [module left arrow] at ([xshift=-7.5mm]module A.west) {};\n  \t%% Module b, below module A\n  \\pic [below=27.5mm of module A.south] {horizontal module={Collisions with bullets, hearts and ships.}{Update player health and position}{Physics}};\n  \\node [module rightup arrow] at ([xshift=6.5mm,yshift=20mm]module B.east) {};\n  \t%% Module c, above module A\n  \\pic [above=33.5mm of module A.north] {horizontal module={Respond to keyboard and mouse inputs.}{Move player and shoot bullets}{Controls}};\n  \\node [module rightdown arrow] at ([xshift=6.5mm,yshift=-20mm]module C.east) {};\n  \t%% Module D, left of module A, removed phaser \n   \\pic [left=45mm of module A.west] {vertical module={Load Sprites, Images and Sound from folder specific in server. Create game enviroment and create player for the client}{Play music, remove destroyed objects from client and render sprites. Update healthbar for player and output messages when player is destroyed.}{Game Engine}};\n    %% Module E\n   \\pic [right=20mm of module A.east] {simple module};\n   \\node[] (node name) at (module E) {\\large {\\textbf{Socket-io}}};\n   \\node [module left arrow] at ([xshift=-7.5mm]module E.west) {};\n   \\node [module right arrow] at ([xshift=8.75mm]module E.east) {};\n   \n  \t%% Module F --- server side modules\n    \\pic [right=19mm of module E.east] {simple module};\n  \\node[] (node name) at (module F) {\\large {\\textbf{Server-Side}}};\n  \\node [module right arrow] at ([xshift=7.5mm]module F.east) {};\n  \\node [module up arrow] at ([yshift=7.5mm]module F.north) {};\n  \\node [module down arrow] at ([yshift=-7.5mm]module F.south) {};\n  %% Module G\n    \\pic [right=45mm of module F.east] {vertical module={Periodically spawn hearts and mini-ships in seperate arrays, generate bullets when user presses shoot button.}{Delete hearts and mini-ships if they go out of bounds or hit by bullet. Delete bullets if out of bounds and output log messages.}{Create Obstacles and bullets}};\n   %% Module H\n   \\pic [above=33.5mm of module F.north] {horizontal module={Logic for when players connect and disconnect or destroyed.}{Update players location and send updates to client}{Manage Players}};\n   \\node [module leftdown arrow] at ([xshift=-6.5mm,yshift=-22.5mm]module H.west) {};\n   %% Module I\n   \\pic [below=27.5mm of module F.south] {horizontal module={Load Folders (assets, sound, js files)}{Update location of obstacles at set intervals}{Manage Game Assets and Obstacles}};\n   \\node [module leftup arrow] at ([xshift=-6.5mm,yshift=22.5mm]module I.west) {};\n%  \\pic [right=42.5mm of module B.east] {vertical module={Description 3}{Description 4}};\n%  \\node [module down arrow] at ([yshift=-7.5mm]module C.south) {};\n%  \\pic [below=27.5mm of module C.south] {horizontal module={Description 5}{Description 6}};\n%  \\node [module down arrow] at ([yshift=-7.5mm]module D.south) {};\n%  \\pic [below=17.5mm of module D.south] {simple module};\n\\end{tikzpicture}\n\\end{document}")])])])])},[],!1,null,null,null);"function"==typeof l&&l(m);o.default=m.exports}}]);