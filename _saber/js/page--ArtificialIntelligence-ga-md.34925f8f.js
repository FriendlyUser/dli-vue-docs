(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{36:function(e,n,t){"use strict";t.r(n);var i=t(0),o=function(e){var n,t,i=((n={}).internal=t=void 0,n.contentType="markdown",n.slug="ArtificialIntelligence/ga",n.content=t,n.title="ga.png",n.date="2019-08-31",n.layout="test",n.markdownHeadings=[],n.excerpt='<p><img src="ga.png" alt="ArtificialIntelligence" title="ga"></p>\n',n.createdAt=new Date(15672096e5),n.updatedAt=new Date(1567371739083),n.type="page",n.permalink="/ArtificialIntelligence/ga.html",n.assets={},n.attributes=n,n.prevPost={title:"Exampl1Circuit.png",permalink:"/ElectroMag/Exampl1Circuit.html"},n.nextPost={title:"BHCurve.png",permalink:"/ElectroMag/BHCurve.html"},n),o=e.options.beforeCreate||[];e.options.beforeCreate=[function(){this.$page=i}].concat(o);["layout","transition"].forEach(function(n){var t=e.options.PageComponent;t&&(e.options[n]=t[n]),void 0===e.options[n]&&(e.options[n]=i[n])}),e.options.name="page-wrapper-"+i.slug.replace(/[^0-9a-z\-]/i,"-")},a=Object(i.a)({},function(){var e=this.$createElement,n=this._self._c||e;return n("layout-manager",[n("p",[n("img",{attrs:{src:"ga.png",alt:"ArtificialIntelligence",title:"ga"}})]),this._v(" "),n("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"tex"}},[n("pre",{pre:!0,attrs:{class:"saber-highlight-code language-tex"}},[n("code",{pre:!0,attrs:{class:"language-tex"}},[this._v("\\documentclass{standalone}\n\n\\usepackage[margin=1.0in]{geometry}\n\\usepackage{tikz}\n\\usetikzlibrary{arrows,shapes,positioning}\n\n\\begin{document}\n\\tikzstyle{decision}=[diamond, draw, fill=yellow!20,\n  text width=4em, text badly centered, node distance=3cm,\n  inner sep=0pt]\n\\tikzstyle{block}=[rectangle, draw, fill=blue!20, \n  text width=8em, text badly centered, rounded corners,\n  minimum height=4em]\n\\tikzstyle{line}=[draw, very thick, color=black!75, -latex']\n\n\\tikzstyle{path}=[draw, very thick, color=black!75, -]\n\n\\begin{tikzpicture}[node distance=2cm, auto]\n  % Place nodes\n  \\node [block] (pop_init) {Population Initialization};\n  \\node [block, below of=pop_init] (fit_ass)\n        {Fitness Assignment};\n  \\node [block, below of=fit_ass] (selection)\n        {Selection};\n    \\node [draw=none, right of=selection] (pointer)\n            {};\n  \\node [block, below of=selection] (crossover)\n        {Crossover};\n        \n  \\node [block, below of=crossover] (mutation)\n        {Mutation};\n  \n    \\node [block, below of=mutation] (inversion)\n        {Inversion};\n        \n  \\node [block, left = 2cm of selection] (done)\n        {Done};\n        \n    \n  % Draw edges\n  \\path [line] (pop_init) -- (fit_ass);\n  \\path [line] (fit_ass) -- (selection);\n  \\path [line] (selection) -- (crossover);\n    \\path [line] (crossover) -- (mutation);\n    \\path [line] (mutation) -- (inversion);\n  \\path [path] (inversion) -| (pointer.center);\n  \n  \\path [line] (pointer.center) -- (selection);\n  \n    \\path [line] (selection) -- (done);\n\\end{tikzpicture}\n\\end{document}")])])])])},[],!1,null,null,null);"function"==typeof o&&o(a);n.default=a.exports}}]);